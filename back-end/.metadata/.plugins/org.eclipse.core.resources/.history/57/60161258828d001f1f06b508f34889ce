import org.springframework.core.io.Resource;
import org.springframework.core.io.UrlResource;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

@RestController
@RequestMapping("/portfolios")
public class PortfolioController {

    @GetMapping("/imagens/{nomeImagem}")
    public ResponseEntity<Resource> servirImagem(@PathVariable String nomeImagem) {
        try {
            // Define o caminho da imagem
            Path caminho = Paths.get("imagens/").resolve(nomeImagem).normalize();

            // Verifica se o arquivo existe
            if (!Files.exists(caminho)) {
                return ResponseEntity.notFound().build();
            }

            // Carrega a imagem como recurso
            Resource recurso = new UrlResource(caminho.toUri());

            // Determina o tipo de m√≠dia da imagem
            String tipoMime = Files.probeContentType(caminho);
            MediaType mediaType = tipoMime != null ? MediaType.parseMediaType(tipoMime) : MediaType.APPLICATION_OCTET_STREAM;

            // Configura os headers da resposta
            return ResponseEntity.ok()
                    .contentType(mediaType)
                    .body(recurso);

        } catch (Exception e) {
            e.printStackTrace();
            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();
        }
    }
}
